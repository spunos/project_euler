# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#      1: 1
#      3: 1, 3
#      6: 1, 2, 3, 6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

import math, timeit

start = timeit.default_timer()

def divs(n):
    facs = 0
    for i in range(1, math.ceil(math.sqrt(n))):
        if (n % i == 0):
            facs += 2
        if (i * i == n): # adjust when i is a perfect square
            facs -= 1
    return facs
    
t = 1
for i in range(2,100000):
    t += i
    numdivs = divs(t)
    if numdivs > 500:
        print(t, ": ", numdivs)
        break

end = timeit.default_timer()
print("time: {0:.2f}".format(end - start))